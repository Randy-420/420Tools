int dlt(char dir[], bool deleteall) {	struct dirent* de; // Pointer for directory entry	DIR* dr = opendir(dir);	if (dr == NULL) { // opendir returns NULL if couldn't open directory//failed to open directory		return 0;	}	while ((de = readdir(dr)) != NULL) {		NSString *Dir = [NSString stringWithUTF8String:dir];		path = [NSString stringWithFormat:@"%@%s/ru.lproj", Dir, de->d_name];		if ([fileManager fileExistsAtPath:path]) {			total+=1;			if (!deleteall) {				//printf("Would you like to delete %sru.lproj%s from %s%s%s?\nuse '%sy%s' or '%syes%s' or '%strue%s' or '%s1%s' to delete the %sru.lproj%s:", c_cyan, c_reset, c_green, de->d_name, c_reset, c_cyan, c_reset, c_cyan, c_reset, c_cyan, c_reset, c_cyan, c_reset, c_cyan, c_reset);				//scanf("%s", input);				//printf("\n");								/*if (strcmp(input, "yes") == 0 || strcmp(input, "y") == 0 || strcmp(input, "1") == 0 || strcmp(input, "true") == 0) {					[CM RunCMD:[NSString stringWithFormat:@"rm -rf %@", path] WaitUntilExit:YES];				}*/			}else{				//printf("%sDeleting %sru.lproj%s from %s%s%s!%s\n", c_green, c_cyan, c_green, c_cyan, de->d_name, c_green, c_reset);				[CM RunRoot:[NSString stringWithFormat:@"rm -rf %@", path] WaitUntilExit:YES];			}			if (![fileManager fileExistsAtPath:path]) {				deleted += 1;				successfulDelete = [NSString stringWithFormat:@"%s%s/ru.lproj\n", [successfulDelete UTF8String], de->d_name];				//printf("%sSuccessfully deleted %s%s%s\n\n", c_green, c_cyan, [path UTF8String], c_reset);			}else{				failedDelete = [NSString stringWithFormat:@"%s%s/ru.lproj\n", [failedDelete UTF8String], de->d_name];				rrfailure = YES;				//printf("%sDid not delete%s\n\n", c_red, c_reset);			}		}	}	closedir(dr);	return 0;}